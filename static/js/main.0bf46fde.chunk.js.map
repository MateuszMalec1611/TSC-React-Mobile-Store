{"version":3,"sources":["components/Navigation/Navigation.module.css","pages/FormOrder/FormOrder.module.css","components/layout/Layout.module.css","pages/StartingPage/StartingPage.module.css","components/OrderedProduct/OrderedProduct.module.css","pages/Profile/Profile.module.css","components/Products/subcomponents/Product/Product.module.css","components/Ui/Loader/Loader.module.css","components/Products/Products.module.css","components/SearchEngine/SearchEngine.module.css","pages/Home/Home.module.css","components/Ui/Button/Button.module.css","pages/ProductDetail/ProductDetail.module.css","components/UserDetails/UserDetails.module.css","pages/pageTransition.ts","api.ts","store/MobileStore/MobileStore.actions.ts","store/MobileStore/MobileStore.services.ts","components/Products/subcomponents/Product/Product.tsx","components/Ui/Loader/Loader.tsx","components/Products/Products.tsx","components/SearchEngine/SearchEngine.tsx","pages/Home/Home.tsx","components/Navigation/Navigation.tsx","components/layout/Layout.tsx","store/User/User.actions.ts","store/User/User.services.ts","components/Ui/Button/Button.tsx","hooks/useForm.ts","pages/FormOrder/FormOrder.tsx","pages/ProductDetail/ProductDetail.tsx","pages/StartingPage/StartingPage.tsx","components/OrderedProduct/OrderedProduct.tsx","components/UserDetails/UserDetails.tsx","pages/Profile/Profile.tsx","MobileStore.tsx","utils/prepareData.ts","store/MobileStore/MobileStore.reducer.ts","store/User/User.reducer.ts","store/RootReducers.ts","store/Store.ts","index.tsx"],"names":["module","exports","pageTransitionFM","initial","animate","exit","variants","in","opacity","x","out","transition","type","ease","duration","api","axios","create","baseURL","process","CANCEL_ORDER","DISPLAY_PRODUCT","ERROR","GET_PRODUCTS","GET_PRODUCT_DETAIL","GET_ORDERED_PRODUCTS","IS_ORDERING","LOADING","SENT_ORDER","GetData","url","shift","dispatch","a","get","data","status","Error","payload","alert","Product","name","img","price","id","visible","history","useHistory","style","display","onClick","push","className","styles","product","src","alt","Loader","loader","Products","useDispatch","useSelector","state","mobileStore","products","loading","useEffect","productsList","map","SearchEngine","searchRef","useRef","searchEngine","onChange","text","current","value","newProductsList","toLocaleLowerCase","includes","ref","placeholder","Home","motion","div","home","Navigation","useState","isActive","setIsActive","window","innerWidth","document","body","overflow","handleBar","prev","navBarClasses","bar","navLinksClasses","navList","nav","logo","to","barBox","activeClassName","active","exact","Layout","children","shouldBeWrapped","props","location","pathname","container","main","GET_USER_DATA","UPDATE_TOTAL_AMOUNT","GetUserData","totalAmount","quantityOfOrers","UpdateUser","quantityOfOrders","put","Button","click","isDisabled","disabled","button","useForm","isInputValid","setValue","isTouched","setIsTouched","isValid","handleValue","target","handleIsTouched","error","emialRegex","OrderForm","productName","useParams","isSent","sent","user","length","trim","nameValue","handleNameValue","handleNameIsTouched","handleNameError","isNameValid","test","emailValue","handleEmailValue","handleEmailIsTouched","handleEmailError","isEmailValid","cityValue","handleCityValue","handleCityIsTouched","handleCityError","isCityValid","postalValue","handlePostalValue","handlePostalIsTouched","handlePostalError","isPostalValid","isFormValid","nameError","emailError","cityError","postalError","buttonInfo","formContext","onSubmit","event","preventDefault","find","date","Date","toLocaleString","undefined","dateStyle","timeStyle","userData","email","city","postalCode","orderedProduct","productInfo","newTotalAmount","newQuantityOfOrders","post","SendProduct","htmlFor","onBlur","successComponent","success","replace","formOrder","fail","ProductDetail","productDetail","processor","ram","Greeting","header","startingPage","heroImage","OrderedProduct","slice","titleDetail","delete","CancelOrder","UserDetails","detailsBox","Profile","orders","orderedProducts","profile","orderedBox","MobileStore","useLocation","isOrdering","AnimatePresence","exitBeforeEnter","path","StartingPage","prepareData","Object","entries","key","defaultState","MobileStoreReducer","action","newOrderedProducts","filter","preparedOrders","UserReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0bf46fde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__3eI15\",\"logo\":\"Navigation_logo__2wCIm\",\"navList\":\"Navigation_navList__3yYy1\",\"navList--active\":\"Navigation_navList--active__FNIj-\",\"active\":\"Navigation_active__FIUEH\",\"barBox\":\"Navigation_barBox__251y1\",\"bar\":\"Navigation_bar__1OM9z\",\"bar--active\":\"Navigation_bar--active__3zabO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formOrder\":\"FormOrder_formOrder__6goce\",\"success\":\"FormOrder_success__3IZqI\",\"fail\":\"FormOrder_fail__1z-RX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__154JR\",\"main\":\"Layout_main__10IBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"startingPage\":\"StartingPage_startingPage__1u4to\",\"heroImage\":\"StartingPage_heroImage__1-pfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderedProduct\":\"OrderedProduct_orderedProduct__3fzbo\",\"titleDetail\":\"OrderedProduct_titleDetail__cImEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3WDcd\",\"orderedBox\":\"Profile_orderedBox__2f250\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"Product_product__VwHbz\",\"show\":\"Product_show__2pEeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2UxoY\",\"loader-roller\":\"Loader_loader-roller__1mutV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__3-IJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchEngine\":\"SearchEngine_searchEngine__15MW6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__39l71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__kUC3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productDetail\":\"ProductDetail_productDetail__2Thy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsBox\":\"UserDetails_detailsBox__29OS1\"};","const pageVariants = {\r\n    in: {\r\n        opacity: 1,\r\n        x: 0,\r\n    },\r\n    out: {\r\n        opacity: 1,\r\n        x: '-100vw',\r\n    },\r\n};\r\n\r\nconst pageTransition = {\r\n    type: 'tween',\r\n    ease: 'anticipate',\r\n    duration: 0.5,\r\n};\r\n\r\nconst pageTransitionFM = {\r\n    initial: 'out',\r\n    animate: 'in',\r\n    exit: 'out',\r\n    variants: pageVariants,\r\n    transition: pageTransition,\r\n};\r\n\r\nexport default pageTransitionFM;\r\n","import axios from 'axios';\r\n\r\nexport const api = () => {\r\n    const instance = axios.create({\r\n        baseURL: process.env.REACT_APP_MOBILE_STORE_API,\r\n    });\r\n\r\n    return instance;\r\n};\r\n\r\nexport default api;\r\n","export const CANCEL_ORDER = 'CANCEL_ORDER';\r\nexport const DISPLAY_PRODUCT = 'DISPLAY_PRODUCT';\r\nexport const ERROR = 'ERROR';\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const GET_PRODUCT_DETAIL = 'GET_PRODUCT_DETAIL';\r\nexport const GET_ORDERED_PRODUCTS = 'GET_ORDERED_PRODUCTS';\r\nexport const IS_ORDERING = 'IS_ORDERING';\r\nexport const LOADING = 'LOADING';\r\nexport const SENT_ORDER = 'SENT_ORDER';\r\n\r\n//TYPES\r\nexport type Product = {\r\n    id: string;\r\n    img: string;\r\n    name: string;\r\n    price: number;\r\n    visible?: boolean;\r\n};\r\nexport type UserData = {\r\n    city: string;\r\n    date: string;\r\n    email: string;\r\n    name: string;\r\n    postalCode: string;\r\n};\r\nexport type OrderedProduct = {\r\n    id: string;\r\n    productInfo: Product;\r\n    userData: UserData;\r\n};\r\nexport interface ProductDetail extends Product {\r\n    display: string;\r\n    processor: string;\r\n    ram: string;\r\n}\r\n\r\n//ACTIONS TYPES\r\nexport interface CancelOrder {\r\n    type: typeof CANCEL_ORDER;\r\n    payload: string;\r\n}\r\nexport interface DisplayProduct {\r\n    type: typeof DISPLAY_PRODUCT;\r\n    payload: Product[];\r\n}\r\nexport interface Error {\r\n    type: typeof ERROR;\r\n    payload: string;\r\n}\r\nexport interface GetProducts {\r\n    type: typeof GET_PRODUCTS;\r\n    payload: Product[];\r\n}\r\nexport interface GetProductDetail {\r\n    type: typeof GET_PRODUCT_DETAIL;\r\n    payload: ProductDetail;\r\n}\r\nexport interface GetOrderedProducts {\r\n    type: typeof GET_ORDERED_PRODUCTS;\r\n    payload: OrderedProduct[];\r\n}\r\nexport interface IsOrdering {\r\n    type: typeof IS_ORDERING;\r\n    payload: boolean;\r\n}\r\nexport interface Loading {\r\n    type: typeof LOADING;\r\n}\r\nexport interface SentOrder {\r\n    type: typeof SENT_ORDER;\r\n    payload: boolean;\r\n}\r\n\r\nexport type MobileStoreDispatchTypes =\r\n    | CancelOrder\r\n    | DisplayProduct\r\n    | Error\r\n    | GetProducts\r\n    | GetProductDetail\r\n    | GetOrderedProducts\r\n    | IsOrdering\r\n    | Loading\r\n    | SentOrder;\r\n","import api from '@api';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n    MobileStoreDispatchTypes,\r\n    OrderedProduct,\r\n    LOADING,\r\n    ERROR,\r\n    SENT_ORDER,\r\n    CANCEL_ORDER,\r\n} from './MobileStore.actions';\r\n\r\nexport const GetData =\r\n    (url: string, type: any, shift = true) =>\r\n    async (dispatch: Dispatch<MobileStoreDispatchTypes>) => {\r\n        try {\r\n            dispatch({ type: LOADING });\r\n            const { data, status } = await api().get(`${url}.json`);\r\n\r\n            if (status !== 200) throw new Error('Failed to get data');\r\n\r\n            if (shift && data) data.shift();\r\n            dispatch({ type, payload: data });\r\n        } catch (error) {\r\n            dispatch({ type: ERROR, payload: error });\r\n            alert(error);\r\n        }\r\n    };\r\n\r\nexport const SendProduct =\r\n    (product: OrderedProduct) => async (dispatch: Dispatch<MobileStoreDispatchTypes>) => {\r\n        try {\r\n            dispatch({ type: LOADING });\r\n            const { status } = await api().post(`/user/ordered-products.json`, product);\r\n\r\n            if (status !== 200) throw new Error('Failed to send order');\r\n\r\n            dispatch({ type: SENT_ORDER, payload: true });\r\n        } catch (error) {\r\n            dispatch({ type: ERROR, payload: error });\r\n        }\r\n    };\r\n\r\nexport const CancelOrder = (id: string) => async (dispatch: Dispatch<MobileStoreDispatchTypes>) => {\r\n    try {\r\n        dispatch({ type: LOADING });\r\n        const { status } = await api().delete(`/user/ordered-products/${id}.json`);\r\n\r\n        if (status !== 200) throw new Error('Failed to cancel the order');\r\n       \r\n        dispatch({ type: CANCEL_ORDER, payload: id });\r\n    } catch (error) {\r\n        dispatch({ type: ERROR, payload: error });\r\n    }\r\n};\r\n","import { useHistory } from 'react-router-dom';\r\nimport styles from './Product.module.css';\r\n\r\nexport interface ProductProps {\r\n    name: string;\r\n    img: string;\r\n    price: number;\r\n    id: string;\r\n    visible?: boolean;\r\n}\r\n\r\nconst Product: React.FC<ProductProps> = ({ name, img, price, id, visible }) => {\r\n    const history = useHistory();\r\n\r\n    const handleProductDetail = () => history.push(`/product/${id}`);\r\n\r\n    return (\r\n        <li\r\n            style={visible ? { display: 'block' } : { display: 'none' }}\r\n            onClick={handleProductDetail}\r\n            className={styles.product}>\r\n            <div>\r\n                <article>\r\n                    <h4>{name}</h4>\r\n                    <p>{price} $</p>\r\n                </article>\r\n                <img src={img} alt=\"1234\" />\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import styles from './Loader.module.css'\r\n\r\nconst Loader: React.FC = () => {\r\n    return (\r\n        <div className={styles.loader}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStore } from '@store/Store';\r\nimport { GetData } from '@store/MobileStore/MobileStore.services';\r\nimport Product from './subcomponents/Product/Product';\r\nimport Loader from '@components/Ui/Loader/Loader';\r\nimport styles from './Products.module.css';\r\nimport { GET_PRODUCTS } from '@store/MobileStore/MobileStore.actions';\r\n\r\nconst Products: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { products, loading } = useSelector((state: RootStore) => state.mobileStore);\r\n    useEffect(() => {\r\n        dispatch(GetData(`/products-header`, GET_PRODUCTS));\r\n    }, [dispatch]);\r\n\r\n    const productsList = products.map(product => <Product key={product.id} {...product} />);\r\n\r\n    return (\r\n        <>\r\n            <ul className={styles.products}>{loading ? <Loader /> : productsList}</ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStore } from '@store/Store';\r\nimport styles from './SearchEngine.module.css';\r\nimport { DISPLAY_PRODUCT } from '@store/MobileStore/MobileStore.actions';\r\n\r\nexport interface SearchEngineProps {}\r\n\r\nconst SearchEngine: React.FC<SearchEngineProps> = () => {\r\n    const searchRef = useRef<HTMLInputElement>(null);\r\n    const dispatch = useDispatch();\r\n    const products = useSelector((state: RootStore) => state.mobileStore.products);\r\n\r\n    const displayCertainProduct = () => {\r\n        const text = searchRef.current!.value;\r\n\r\n        const newProductsList = products.map(product => {\r\n            if (product.name.toLocaleLowerCase().includes(text)) {\r\n                return { ...product, visible: true };\r\n            } else {\r\n                return { ...product, visible: false };\r\n            }\r\n        });\r\n\r\n        dispatch({ type: DISPLAY_PRODUCT, payload: newProductsList });\r\n    };\r\n\r\n    return (\r\n        <div className={styles.searchEngine}>\r\n            <input onChange={displayCertainProduct} ref={searchRef} placeholder=\"Search\" type=\"text\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchEngine;\r\n","import { motion } from 'framer-motion';\r\nimport pageTransitionFM from '@pages/pageTransition';\r\nimport Products from '@components/Products/Products';\r\nimport SearchEngine from '@components/SearchEngine/SearchEngine';\r\nimport styles from './Home.module.css';\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <motion.div {...pageTransitionFM} className={styles.home}>\r\n            <SearchEngine />\r\n            <Products />\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst Navigation: React.FC = () => {\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    if (window.innerWidth < 768) {\r\n        if (isActive) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'unset';\r\n        }\r\n    }\r\n    const handleBar = () => setIsActive(prev => !prev);\r\n\r\n    const navBarClasses = isActive ? `${styles.bar} ${styles['bar--active']}` : `${styles.bar}`;\r\n    const navLinksClasses = isActive ? `${styles.navList} ${styles['navList--active']}` : `${styles.navList}`;\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <div className={styles.logo}>\r\n                <NavLink to=\"/home\">\r\n                    Mobile<span> Store</span>\r\n                </NavLink>\r\n            </div>\r\n            <div onClick={handleBar} className={styles.barBox}>\r\n                <div className={navBarClasses}></div>\r\n            </div>\r\n\r\n            <div className={navLinksClasses}>\r\n                <ul>\r\n                    <li>\r\n                        <NavLink onClick={handleBar} activeClassName={styles.active} to=\"/home\">\r\n                            H<span>o</span>me\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink onClick={handleBar} activeClassName={styles.active} to=\"/profile\">\r\n                            P<span>r</span>ofile\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink onClick={handleBar} activeClassName={styles.active} to=\"/\" exact>\r\n                            E<span>x</span>it\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n","import { motion } from 'framer-motion';\r\nimport pageTransitionFM from '@pages/pageTransition';\r\nimport Navigation from '@components/Navigation/Navigation';\r\nimport styles from './Layout.module.css';\r\n\r\nexport interface LayoutProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n    const pagePath = children.props.location.pathname;\r\n    const shouldBeWrapped = pagePath !== '/';\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {shouldBeWrapped && (\r\n                <>\r\n                    <Navigation />\r\n                    <motion.main {...pageTransitionFM} className={styles.main}>\r\n                        {children}\r\n                    </motion.main>\r\n                </>\r\n            )}\r\n            {!shouldBeWrapped && children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","export const GET_USER_DATA = 'GET_USER_DATA';\r\nexport const UPDATE_TOTAL_AMOUNT = 'UPDATE_TOTAL_AMOUNT';\r\n\r\nexport type Details = {\r\n    totalAmount: number;\r\n    quantityOfOrders: number;\r\n};\r\n\r\ninterface GetUserData {\r\n    type: typeof GET_USER_DATA;\r\n    payload: Details;\r\n}\r\ninterface UpdateTotalAmount {\r\n    type: typeof UPDATE_TOTAL_AMOUNT;\r\n    payload: Details;\r\n}\r\n\r\nexport type UserDispatchTypes = GetUserData | UpdateTotalAmount;\r\n","import api from '@api';\r\nimport { Dispatch } from 'redux';\r\nimport { GET_USER_DATA, UPDATE_TOTAL_AMOUNT, UserDispatchTypes } from './User.actions';\r\n\r\nexport const GetUserData = () => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n    try {\r\n        const { data, status } = await api().get('/user/details.json');\r\n\r\n        if (status !== 200) throw new Error('Failed to get details');\r\n\r\n        dispatch({ type: GET_USER_DATA, payload: data ?? { totalAmount: 0, quantityOfOrers: 0 } });\r\n    } catch (error) {\r\n        alert(error);\r\n    }\r\n};\r\nexport const UpdateUser =\r\n    (totalAmount: number, quantityOfOrders: number) => async (dispatch: Dispatch<UserDispatchTypes>) => {\r\n        try {\r\n            const { status } = await api().put('/user/details.json', {\r\n                totalAmount,\r\n                quantityOfOrders,\r\n            });\r\n\r\n            if (status !== 200) throw new Error('Failed to update');\r\n\r\n            dispatch({ type: UPDATE_TOTAL_AMOUNT, payload: { totalAmount, quantityOfOrders } });\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n","import styles from './Button.module.css';\r\n\r\nexport interface ButtonProps {\r\n    click?: () => void;\r\n    isDisabled?: boolean;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, click, isDisabled }) => {\r\n    const handleClick = () => (click ? click() : null);\r\n\r\n    return (\r\n        <button disabled={isDisabled} onClick={handleClick} className={styles.button}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\n\r\nconst useForm = (isInputValid: (value: string) => boolean) => {\r\n    const [value, setValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const handleValue = ({ target }: React.ChangeEvent<HTMLInputElement>) => setValue(target.value);\r\n    const handleIsTouched = () => setIsTouched(true);\r\n\r\n    let isValid = isInputValid(value);\r\n    const error = !isValid && isTouched;\r\n\r\n    return {\r\n        value,\r\n        handleValue,\r\n        handleIsTouched,\r\n        error,\r\n        isValid\r\n    };\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { ParamTypes } from '@pages/ProductDetail/ProductDetail';\r\nimport { motion } from 'framer-motion';\r\nimport { RootStore } from '@store/Store';\r\nimport { GetData, SendProduct } from '@store/MobileStore/MobileStore.services';\r\nimport { GetUserData, UpdateUser } from '@store/User/User.services';\r\nimport { GET_PRODUCTS, SENT_ORDER } from '@store/MobileStore/MobileStore.actions';\r\nimport pageTransitionFM from '@pages/pageTransition';\r\nimport Button from '@components/Ui/Button/Button';\r\nimport useForm from '@hooks/useForm';\r\nimport Loader from '@components/Ui/Loader/Loader';\r\nimport styles from './FormOrder.module.css';\r\n\r\nconst emialRegex =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nconst OrderForm: React.FC = () => {\r\n    const { productName } = useParams<ParamTypes>();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { products, loading, sent: isSent, error } = useSelector((state: RootStore) => state.mobileStore);\r\n    const { totalAmount, quantityOfOrders } = useSelector((state: RootStore) => state.user);\r\n    // GET DATA IF MAY BE OUT OF UPDATES\r\n    useEffect(() => {\r\n        if (products?.length === 0) dispatch(GetData(`/products-header`, GET_PRODUCTS));\r\n        dispatch({ type: SENT_ORDER, payload: false });\r\n    }, [dispatch, products]);\r\n    useEffect(() => {\r\n        if (totalAmount === 0 || quantityOfOrders === 0) dispatch(GetUserData());\r\n    }, [dispatch, quantityOfOrders, totalAmount]);\r\n\r\n    const {\r\n        value: nameValue,\r\n        handleValue: handleNameValue,\r\n        handleIsTouched: handleNameIsTouched,\r\n        error: handleNameError,\r\n        isValid: isNameValid,\r\n    } = useForm((value: string) => value.trim() !== '');\r\n    const {\r\n        value: emailValue,\r\n        handleValue: handleEmailValue,\r\n        handleIsTouched: handleEmailIsTouched,\r\n        error: handleEmailError,\r\n        isValid: isEmailValid,\r\n    } = useForm((value: string) => emialRegex.test(value));\r\n    const {\r\n        value: cityValue,\r\n        handleValue: handleCityValue,\r\n        handleIsTouched: handleCityIsTouched,\r\n        error: handleCityError,\r\n        isValid: isCityValid,\r\n    } = useForm((value: string) => value.trim() !== '');\r\n    const {\r\n        value: postalValue,\r\n        handleValue: handlePostalValue,\r\n        handleIsTouched: handlePostalIsTouched,\r\n        error: handlePostalError,\r\n        isValid: isPostalValid,\r\n    } = useForm((value: string) => value.trim() !== '');\r\n\r\n    const handleSubmit = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n\r\n        const product = products!.find(product => product.id === productName);\r\n        delete product!.visible;\r\n        const date = new Date().toLocaleString(undefined, { dateStyle: 'full', timeStyle: 'long' });\r\n\r\n        const userData = { name: nameValue, email: emailValue, city: cityValue, postalCode: postalValue };\r\n        const orderedProduct = { id: 'any', productInfo: { ...product! }, userData: { ...userData, date } };\r\n\r\n        const newTotalAmount = totalAmount + product!.price;\r\n        const newQuantityOfOrders = quantityOfOrders + 1;\r\n\r\n        dispatch(SendProduct(orderedProduct));\r\n        dispatch(UpdateUser(newTotalAmount, newQuantityOfOrders));\r\n    };\r\n\r\n    const handleClose = () => history.replace('/home');\r\n\r\n    let isFormValid = isNameValid && isEmailValid && isCityValid && isPostalValid;\r\n\r\n    const nameError = handleNameError && <p>Please enter a valid Full Name!</p>;\r\n    const emailError = handleEmailError && <p>Please enter a valid Email!</p>;\r\n    const cityError = handleCityError && <p>Please enter a valid City!</p>;\r\n    const postalError = handlePostalError && <p>Please enter a valid Postal Code!</p>;\r\n    const buttonInfo = !isFormValid && <p>Please fill all required fields (*)</p>;\r\n\r\n    const formContext = (\r\n        <>\r\n            <article>\r\n                <p>You're ordering</p>\r\n                <h2>{productName}</h2>\r\n            </article>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"fullname\">\r\n                    *Full Name\r\n                    <input\r\n                        onBlur={handleNameIsTouched}\r\n                        onChange={handleNameValue}\r\n                        value={nameValue}\r\n                        id=\"fullname\"\r\n                        type=\"text\"\r\n                    />\r\n                    {nameError}\r\n                </label>\r\n                <label htmlFor=\"email\">\r\n                    *Email\r\n                    <input\r\n                        onBlur={handleEmailIsTouched}\r\n                        onChange={handleEmailValue}\r\n                        value={emailValue}\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                    />\r\n                    {emailError}\r\n                </label>\r\n                <label htmlFor=\"city\">\r\n                    *City\r\n                    <input\r\n                        onBlur={handleCityIsTouched}\r\n                        onChange={handleCityValue}\r\n                        value={cityValue}\r\n                        id=\"city\"\r\n                        type=\"text\"\r\n                    />\r\n                    {cityError}\r\n                </label>\r\n                <label htmlFor=\"postalCode\">\r\n                    *Postal Code\r\n                    <input\r\n                        onBlur={handlePostalIsTouched}\r\n                        onChange={handlePostalValue}\r\n                        value={postalValue}\r\n                        id=\"postalCode\"\r\n                        type=\"text\"\r\n                    />\r\n                    {postalError}\r\n                </label>\r\n                <Button isDisabled={!isFormValid}>buy</Button>\r\n                {buttonInfo}\r\n            </form>\r\n        </>\r\n    );\r\n\r\n    const successComponent = (\r\n        <>\r\n            <p className={styles.success}>Your order has been processed</p>\r\n            <Button click={handleClose}>close</Button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <motion.div {...pageTransitionFM} className={styles.formOrder}>\r\n            {!loading && !isSent ? formContext : null}\r\n            {loading ? <Loader /> : null}\r\n            {!loading && isSent && error === '' ? successComponent : null}\r\n            {!loading && isSent && error !== '' ? <p className={styles.fail}>{error}</p> : null}\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default OrderForm;\r\n","import { useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport { RootStore } from '@store/Store';\r\nimport pageTransitionFM from '@pages/pageTransition';\r\nimport { GetData } from '@store/MobileStore/MobileStore.services';\r\nimport { GET_PRODUCT_DETAIL, IS_ORDERING } from '@store/MobileStore/MobileStore.actions';\r\nimport Button from '@components/Ui/Button/Button';\r\nimport styles from './ProductDetail.module.css';\r\nexport interface ParamTypes {\r\n    productName: string;\r\n}\r\n\r\nconst ProductDetail: React.FC = () => {\r\n    const { productName } = useParams<ParamTypes>();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const product = useSelector((state: RootStore) => state.mobileStore.productDetail);\r\n\r\n    useEffect(() => {\r\n        dispatch(GetData(`/products-description/${productName}`, GET_PRODUCT_DETAIL, false));\r\n    }, [dispatch, productName]);\r\n\r\n    const handleForm = () => {\r\n        dispatch({ type: IS_ORDERING, payload: true });\r\n        history.push(`/ordering/${productName}`);\r\n    };\r\n\r\n    return (\r\n        <motion.div {...pageTransitionFM} className={styles.productDetail}>\r\n            <h2>{product?.name}</h2>\r\n            <img src={product?.img} alt={productName} />\r\n            <article>\r\n                <h4>Price</h4>\r\n                <p>{product?.price}$</p>\r\n            </article>\r\n            <article>\r\n                <h4>Display</h4>\r\n                <p>{product?.display}</p>\r\n            </article>\r\n            <article>\r\n                <h4>Processor</h4>\r\n                <p>{product?.processor}</p>\r\n            </article>\r\n            <article>\r\n                <h4>RAM</h4>\r\n                <p>{product?.ram}</p>\r\n            </article>\r\n            <Button click={handleForm}>Order</Button>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default ProductDetail;\r\n","import { useHistory } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport pageTransitionFM from '@pages/pageTransition';\r\nimport styles from './StartingPage.module.css';\r\nimport '../../css/animations.css';\r\n\r\nconst Greeting: React.FC = () => {\r\n    const history = useHistory();\r\n\r\n    const handleRedirect = () => history.push('/home');\r\n\r\n    return (\r\n        <motion.header {...pageTransitionFM} className={styles.startingPage}>\r\n            <div className={styles.heroImage}></div>\r\n            <section>\r\n                <h1 className=\"slideInR\">\r\n                    M<span>o</span>bile Store\r\n                </h1>\r\n                <h3 className=\"slideInL\">New phone only for you</h3>\r\n                <button className=\"show\" onClick={handleRedirect}>\r\n                    checkout\r\n                </button>\r\n            </section>\r\n        </motion.header>\r\n    );\r\n};\r\n\r\nexport default Greeting;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStore } from '@store/Store';\r\nimport { Product, UserData } from '@store/MobileStore/MobileStore.actions';\r\nimport Button from '@components/Ui/Button/Button';\r\nimport styles from './OrderedProduct.module.css';\r\nimport Loader from '@components/Ui/Loader/Loader';\r\nimport { CancelOrder } from '@store/MobileStore/MobileStore.services';\r\nimport { UpdateUser } from '@store/User/User.services';\r\n\r\nexport interface OrderedProductProps {\r\n    id: string;\r\n    productInfo: Product;\r\n    userData: UserData;\r\n}\r\n\r\nconst OrderedProduct: React.FC<OrderedProductProps> = ({ id, productInfo, userData }) => {\r\n    const loading = useSelector((state: RootStore) => state.mobileStore.loading);\r\n    const { totalAmount, quantityOfOrders } = useSelector((state: RootStore) => state.user);\r\n    const dispatch = useDispatch();\r\n    const date = userData.date.slice(0, 32);\r\n\r\n    const handleCancelOrder = () => {\r\n        const newTotalAmount = totalAmount - productInfo.price;\r\n        const newQuantityOfOrders = quantityOfOrders - 1;\r\n\r\n        dispatch(CancelOrder(id));\r\n        dispatch(UpdateUser(newTotalAmount, newQuantityOfOrders));\r\n    };\r\n\r\n    const orderedProduct = (\r\n        <>\r\n            <img src={productInfo.img} alt={productInfo.name} />\r\n            <div>\r\n                <article className={styles.titleDetail}>\r\n                    <h3>{productInfo.name}</h3>\r\n                    <p>{productInfo.price} $</p>\r\n                </article>\r\n                <article>\r\n                    <h4>Delivery address</h4>\r\n                    <p>City: {userData.city}</p>\r\n                    <p>Postal Code: {userData.postalCode}</p>\r\n                </article>\r\n                <article>\r\n                    <h4>The recipient's details</h4>\r\n                    <p>Name: {userData.name}</p>\r\n                    <p>emial: {userData.email}</p>\r\n                </article>\r\n                <article>\r\n                    <h4>Date of order:</h4>\r\n                    <p>{date}</p>\r\n                </article>\r\n                <Button click={handleCancelOrder}>cancel the order</Button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return <div className={styles.orderedProduct}>{loading ? <Loader /> : orderedProduct}</div>;\r\n};\r\n\r\nexport default OrderedProduct;\r\n","import { RootStore } from '@store/Store';\r\nimport { GetUserData } from '@store/User/User.services';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './UserDetails.module.css';\r\n\r\nexport interface UserDetailsProps {}\r\n\r\nconst UserDetails: React.FC<UserDetailsProps> = () => {\r\n    const dispatch = useDispatch();\r\n    const { totalAmount, quantityOfOrders } = useSelector((state: RootStore) => state.user);\r\n\r\n    useEffect(() => {\r\n        dispatch(GetUserData());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={styles.detailsBox}>\r\n            <article>\r\n                <h4>Total amount of orders</h4>\r\n                <p>{totalAmount} $</p>\r\n            </article>\r\n            <article>\r\n                <h4>Number of orders</h4>\r\n                <p>{quantityOfOrders}</p>\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserDetails;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion';\r\nimport { RootStore } from '@store/Store';\r\nimport pageTransitionFM from '@pages/pageTransition';\r\nimport { GetData } from '@store/MobileStore/MobileStore.services';\r\nimport { GET_ORDERED_PRODUCTS } from '@store/MobileStore/MobileStore.actions';\r\nimport OrderedProduct from '@components/OrderedProduct/OrderedProduct';\r\nimport UserDetails from '@components/UserDetails/UserDetails';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const orders = useSelector((state: RootStore) => state.mobileStore.orderedProducts!);\r\n\r\n    useEffect(() => {\r\n        dispatch(GetData('/user/ordered-products', GET_ORDERED_PRODUCTS, false));\r\n    }, [dispatch]);\r\n\r\n    const orderedProducts = orders?.map(product => <OrderedProduct key={product.id} {...product} />);\r\n\r\n    return (\r\n        <motion.div {...pageTransitionFM} className={styles.profile}>\r\n            <h2>\r\n                Your O<span>r</span>ders\r\n            </h2>\r\n            <UserDetails />\r\n            <div className={styles.orderedBox}>\r\n                {orders.length !== 0 ? orderedProducts : <p>You have not placed any orders yet :/</p>}\r\n            </div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import { AnimatePresence } from 'framer-motion';\r\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStore } from '@store/Store';\r\nimport Home from '@pages/Home/Home';\r\nimport Layout from '@components/layout/Layout';\r\nimport OrderForm from '@pages/FormOrder/FormOrder';\r\nimport ProductDetail from '@pages/ProductDetail/ProductDetail';\r\nimport StartingPage from '@pages/StartingPage/StartingPage';\r\nimport Profile from '@pages/Profile/Profile';\r\n\r\nconst MobileStore: React.FC = () => {\r\n    const location = useLocation();\r\n    const isOrdering = useSelector((state: RootStore) => state.mobileStore.isOrdering);\r\n\r\n    return (\r\n        <AnimatePresence exitBeforeEnter>\r\n            <Layout>\r\n                <Switch location={location}>\r\n                    <Route path=\"/\" exact>\r\n                        <StartingPage />\r\n                    </Route>\r\n                    <Route path=\"/home\">\r\n                        <Home />\r\n                    </Route>\r\n                    <Route path=\"/product/:productName\">\r\n                        <ProductDetail />\r\n                    </Route>\r\n                    <Route path=\"/ordering/:productName\">\r\n                        {isOrdering ? <OrderForm /> : <Redirect to=\"/home\" />}\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                        <Profile />\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <p>not found</p>\r\n                    </Route>\r\n                </Switch>\r\n            </Layout>\r\n        </AnimatePresence>\r\n    );\r\n};\r\n\r\nexport default MobileStore;\r\n","import { OrderedProduct} from '@store/MobileStore/MobileStore.actions';\r\n\r\nexport const prepareData = (data: OrderedProduct[]) => {\r\n    if (!data) return;\r\n    const orderedProducts = [];\r\n\r\n    for (const [key, value] of Object.entries(data)) {\r\n        orderedProducts.push({\r\n            id: key,\r\n            productInfo: value.productInfo,\r\n            userData: value.userData,\r\n        });\r\n    }\r\n    \r\n    return orderedProducts;\r\n};\r\n","import { prepareData } from '@utils/prepareData';\r\nimport {\r\n    Product,\r\n    ProductDetail,\r\n    MobileStoreDispatchTypes,\r\n    ERROR,\r\n    GET_PRODUCTS,\r\n    GET_PRODUCT_DETAIL,\r\n    IS_ORDERING,\r\n    LOADING,\r\n    SENT_ORDER,\r\n    OrderedProduct,\r\n    GET_ORDERED_PRODUCTS,\r\n    CANCEL_ORDER,\r\n    DISPLAY_PRODUCT,\r\n} from './MobileStore.actions';\r\n\r\ninterface DefaultState {\r\n    products: Product[];\r\n    productDetail?: ProductDetail;\r\n    orderedProducts: OrderedProduct[];\r\n    isOrdering: boolean;\r\n    loading: boolean;\r\n    sent: boolean;\r\n    error: string;\r\n}\r\n\r\nconst defaultState: DefaultState = {\r\n    products: [],\r\n    orderedProducts: [],\r\n    isOrdering: false,\r\n    loading: false,\r\n    sent: false,\r\n    error: '',\r\n};\r\n\r\nconst MobileStoreReducer = (\r\n    state: DefaultState = defaultState,\r\n    action: MobileStoreDispatchTypes\r\n): typeof defaultState => {\r\n    switch (action.type) {\r\n        case CANCEL_ORDER:\r\n            const newOrderedProducts = state.orderedProducts.filter(product => product.id !== action.payload);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                orderedProducts: newOrderedProducts,\r\n            };\r\n        case DISPLAY_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: action.payload,\r\n            };\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n        case GET_PRODUCTS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                products: action.payload,\r\n            };\r\n        case GET_PRODUCT_DETAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                productDetail: action.payload,\r\n            };\r\n        case GET_ORDERED_PRODUCTS:\r\n            const preparedOrders = prepareData(action.payload);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                orderedProducts: preparedOrders! ?? [],\r\n            };\r\n        case IS_ORDERING:\r\n            return {\r\n                ...state,\r\n                isOrdering: action.payload,\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SENT_ORDER:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                sent: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default MobileStoreReducer;\r\n","import { GET_USER_DATA, UPDATE_TOTAL_AMOUNT, UserDispatchTypes } from './User.actions';\r\n\r\ninterface DefaultState {\r\n    totalAmount: number;\r\n    quantityOfOrders: number;\r\n}\r\n\r\nconst defaultState: DefaultState = {\r\n    totalAmount: 0,\r\n    quantityOfOrders: 0,\r\n};\r\n\r\nconst UserReducer = (state: DefaultState = defaultState, action: UserDispatchTypes): typeof defaultState => {\r\n    switch (action.type) {\r\n        case GET_USER_DATA:\r\n            return {\r\n                totalAmount: action.payload.totalAmount ?? 0,\r\n                quantityOfOrders: action.payload.quantityOfOrders ?? 0,\r\n            };\r\n        case UPDATE_TOTAL_AMOUNT:\r\n            return {\r\n                totalAmount: action.payload.totalAmount ?? 0,\r\n                quantityOfOrders: action.payload.quantityOfOrders ?? 0,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default UserReducer;\r\n","import { combineReducers } from 'redux';\r\nimport MobileStoreReducer from './MobileStore/MobileStore.reducer';\r\nimport UserReducer from './User/User.reducer';\r\n\r\nconst rootReducer = combineReducers({ mobileStore: MobileStoreReducer, user: UserReducer });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './RootReducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport type RootStore = ReturnType<typeof rootReducer>;\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport MobileStore from './MobileStore';\r\nimport store from './store/Store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <MobileStore />\r\n            </Provider>\r\n        </React.StrictMode>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}